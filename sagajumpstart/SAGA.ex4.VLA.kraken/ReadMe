   This is an example of how to run SAGA to do Match Field Processing with
multiple frequencies using a vertical array.  The input (simulated) data for
this example is generated by Kraken and imported into SAGA.  
   This simulated example matches the SWellEx96 Event S5 data set at 
J131 23:55.  The source is at a range of 3 km and depth of 60m.  The array 
tilt is between 0.5 and 1.0 degrees.  For the simulation the tilt was set 
at -2 meters ( or 0.95 degrees ).
   The script runSAGA.scr will first run SAGA to generate the simulated data
file. Then copy the input file from a *.obs extension to a *.in extension.
   Now that the simulated data is set as the input file, run SAGA a
second time to produce the 'a posteriori' distribution data.  The
post-processor POST is run on the SAGA output to compute the 'a posteriori'
distribution best, most-likely, and mean fit results.  POST also appends a
text copy of the results to the file results. 
   To produce the contour plot, repeat these steps with a different input
parameter file for SAGA (vertC.dat). Note that MFP is done with only the
first two parameters when generating the contour plot.  Any additional 
parameters are not searched, they are set to the initial value in the *.dat
file.  This may not be the optimal value found from the inversion. 
   To generate the two postscript plots use Matlab.  Using the built in
M-files in the SAGA matlab directory generate the inversion plot and the
contour plot.  In this example the SAGA provided M-file to produce the
contour plot has been modified to allow for choice of color bar range.
In the script runSAGA.scr the matlab plotting portion now has a cmin
and cmax parameter.  When the M-file 'contsaga.m' is called it uses the 
values for cmin and cmax as the ranges in dB for the colorbar.
   
     The inversion plot shows a panel for each parameter searched. The plot
shows that in each panel (search parameter) the result seems to be well
determined. The addition of 12 more frequencies does not improve the tilt
result as most of this information comes from the highest frequency signal.
But the source depth and range is better determined with multiple frequecies
instead of just one.  
     The results file looks like:


SAGA jumpstart Example,  search for src range, depth, tilt  range Nincr=128 
 ***************
  best obtainable theoretical fit -4.1751056E-09
  best fit (best, ppd, mean)  0.2592583      0.2607544      0.1180783    

                                best-of all  most likely     mean   std-dev
  1 Source range (m)           1  3055.118     3055.118  3026.758     0.004
  2 Array tilt (m)             1    -2.441       -2.283    -2.071     0.037
  3 Source depth (m)           1    59.370       59.370    59.846     0.006
 

     So with Kraken generated data the match is very close to the true location 
of the source range, source depth, and array tilt. With a perfect match the 
peak level would be 0 dB.  This result has a peak value of -1.36 dB.
   In this example two contour plots are generated, 'source range verses
array tilt' is the first plot generated.  The range of the source is the x-axis
and the y-axis is the array tilt in meters. 
   The second contour plot displays the 'source range verse source depth'.
This shows a very good match for the source.  A simple experiment to try is
to reduce the number of frequencies and see how the results degrade.

summary of what is in the directory

scripts:
runSAGA.scr - script to run SAGA and produce 'a posteriori' distribution plot
              and contour plot.

input files:
vert.dat   - SAGA input parameter file ( options set to compute inversion )
vertC.dat  - SAGA input parameter file ( produce range verses tilt plot)
vertC2.dat - SAGA input parameter file ( produce range verses depth plot)
cov.in - input data for SAGA

results output by SAGA:
results - results of both runs in test file format
SAGAscatter.ps - 'a posteriori' distribution plot (inversion plot)
SAGAcontour.ps - contour plot (range verse tilt)
SAGAcontour2.ps - contour plot (range verse depth)

